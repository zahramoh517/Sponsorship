{"version":3,"file":"require.js","sourceRoot":"","sources":["../../../src/hooks/require.ts"],"names":[],"mappings":"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","sourcesContent":["import { writeSync } from 'node:fs'\nimport Module from 'node:module'\nimport { dirname, resolve } from 'node:path'\nimport { format } from 'node:util'\nimport { addHook } from 'pirates'\nimport { getDiagMode } from '../diagnostic-mode.js'\nimport { equivalents } from '../equivalents.js'\nimport { getOutputFile } from '../get-output-file.js'\nimport { requireCommonJSLoad } from '../require-commonjs-load.js'\nimport { fileExists, readFile } from '../ts-sys-cached.js'\n\nlet svcLoad: typeof import('../service/load.js') | undefined =\n  undefined\nconst diagMode = getDiagMode()\n\nconst ModuleWithLoad = Module as typeof Module & {\n  _resolveFilename: (specifier: string, parent?: Module) => any\n}\n\nconst { _resolveFilename: originalResolve } = ModuleWithLoad\n\n// As of node 21, we still must patch this method, because it is\n// called *prior* to the resolve hook for require(), and will fail\n// if it ends up pointing to a file that doesn't exist, even though\n// the load hook can load it just fine.\nObject.assign(Module, {\n  _resolveFilename: (request: string, parent?: Module) => {\n    if (\n      parent &&\n      (request.startsWith('../') || request.startsWith('./'))\n    ) {\n      const target = resolve(dirname(parent.filename), request)\n      const equiv = equivalents(target, true)\n      if (equiv && !fileExists(target)) {\n        for (const target of equiv) {\n          if (fileExists(target)) {\n            return originalResolve(target, parent)\n          }\n        }\n      }\n    }\n    return originalResolve(request, parent)\n  },\n})\n\n// Note: this incurs a *significant* per-process overhead if we need to\n// do the actual compilation! Thankfully, by the time this is hit, we've\n// probably already precompiled it in the resolve hook.\n// Only add this hook if we're on a node version that cannot provide\n// source in the load hook for commonjs. This functionality was added\n// at the same time as --import and Module.register, so test that.\n/* c8 ignore start */\nif (typeof Module.register !== 'function') {\n  const consoleError = (...msg: any[]) =>\n    writeSync(1, format(...msg) + '\\n')\n\n  addHook(\n    (code, fileName) => {\n      if (fileName.endsWith('.js') && code) return code\n      let outputFile = getOutputFile(fileName)\n      const tx = readFile(outputFile)\n      if (tx) return tx\n\n      // have to do the full transpile inline.\n      if (!svcLoad) {\n        svcLoad = requireCommonJSLoad()\n      }\n      const { fileName: file, diagnostics } = svcLoad.load(fileName)\n      if (diagnostics.length && diagMode !== 'ignore') {\n        for (const d of diagnostics) consoleError(d)\n        if (diagMode === 'error') process.exit(1)\n      }\n      return (file ? readFile(file) : code) || code\n    },\n    { exts: ['.ts', '.cts'], ignoreNodeModules: true }\n  )\n}\n/* c8 ignore stop */\n"]}
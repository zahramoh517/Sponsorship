{"version":3,"file":"compile.js","sourceRoot":"","sources":["../../../src/service/compile.ts"],"names":[],"mappings":";AAAA,oEAAoE;AACpE,wEAAwE;AACxE,4CAA4C;AAC5C,uEAAuE;AACvE,wBAAwB;;;AAExB,8DAAsD;AACtD,0DAAsD;AACtD,uEAA8D;AAC9D,2DAI4B;AAErB,MAAM,OAAO,GAAG,CACrB,IAAY,EACZ,QAAgB,EAChB,SAAS,GAAG,IAAI,EAChB,EAAE;IACF,MAAM,kBAAkB,GAAW,IAAA,mCAAgB,EAAC,QAAQ,CAAC,CAAA;IAC7D,MAAM,cAAc,GAAG,IAAA,mCAAc,EAAC,kBAAkB,CAAC,CAAA;IACzD,MAAM,SAAS,GAAG,SAAS;QACzB,CAAC,CAAC,4CAAkB;QACpB,CAAC,CAAC,0CAAsB,CAAA;IAC1B,MAAM,WAAW,GACf,cAAc,KAAK,UAAU;QAC3B,CAAC,CAAC,0CAAsB;QACxB,CAAC,CAAC,qCAAiB,CAAA;IAEvB,IAAI,EAAE,UAAU,EAAE,WAAW,EAAE,GAAG,SAAS,CACzC,IAAI,EACJ,kBAAkB,CACnB,CAAA;IAED,OAAO;QACL,qBAAqB;QACrB,UAAU,EACR,UAAU,IAAI,WAAW,CAAC,IAAI,EAAE,kBAAkB,CAAC,CAAC,UAAU;QAChE,oBAAoB;QACpB,WAAW;KACZ,CAAA;AACH,CAAC,CAAA;AA3BY,QAAA,OAAO,WA2BnB","sourcesContent":["// Compile the input either in typecheck or transpile only mode, and\n// fall back to a dialect-forced transpile-only result if the classifier\n// gives us a different result than we want.\n// This is not cached, it is cached at the load() level based on config\n// and file change time.\n\nimport { classifyModule } from '../classify-module.js'\nimport { normalizeSlashes } from '../ts-sys-cached.js'\nimport { getOutputTypeCheck } from './get-output-typecheck.js'\nimport {\n  getOutputForceCommonJS,\n  getOutputForceESM,\n  getOutputTranspileOnly,\n} from './transpile-only.js'\n\nexport const compile = (\n  code: string,\n  fileName: string,\n  typeCheck = true\n) => {\n  const normalizedFileName: string = normalizeSlashes(fileName)\n  const classification = classifyModule(normalizedFileName)\n  const getOutput = typeCheck\n    ? getOutputTypeCheck\n    : getOutputTranspileOnly\n  const forceOutput =\n    classification === 'commonjs'\n      ? getOutputForceCommonJS\n      : getOutputForceESM\n\n  let { outputText, diagnostics } = getOutput(\n    code,\n    normalizedFileName\n  )\n\n  return {\n    /* c8 ignore start */\n    outputText:\n      outputText ?? forceOutput(code, normalizedFileName).outputText,\n    /* c8 ignore stop */\n    diagnostics,\n  }\n}\n"]}
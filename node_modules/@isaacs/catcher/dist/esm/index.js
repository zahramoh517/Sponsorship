const stlProp = Object.getOwnPropertyDescriptor(Error, 'stackTraceLimit');
const hasSTL = stlProp && stlProp.writable && typeof stlProp.value === 'number';
export function catcher(fn, caughtValue) {
    const originalStackTraceLimit = Error.stackTraceLimit;
    /* c8 ignore next */
    if (hasSTL)
        Error.stackTraceLimit = 0;
    try {
        return fn();
    }
    catch {
        return caughtValue;
        /* c8 ignore next */
    }
    finally {
        /* c8 ignore next */
        if (hasSTL)
            Error.stackTraceLimit = originalStackTraceLimit;
    }
}
export function catchWrap(fn, caughtValue) {
    return (...a) => catcher(() => fn(...a), caughtValue);
}
//# sourceMappingURL=index.js.map
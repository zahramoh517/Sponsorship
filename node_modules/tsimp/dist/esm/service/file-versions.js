import { tsconfig } from './tsconfig.js';
// a map of files versioned by number
let config = undefined;
let rfn = undefined;
export const rootFileNames = () => {
    const newConf = tsconfig();
    if (newConf !== config) {
        rfn = undefined;
        config = newConf;
    }
    return rfn ?? (rfn = new Set(config.fileNames));
};
export const fileContents = new Map();
let projectVersionNum = 0;
export const fileVersions = new Map([...rootFileNames()].map(fileName => [fileName, 0]));
export const projectVersion = () => String(projectVersionNum);
export const incProjectVersion = () => String(++projectVersionNum);
export const updateFileVersion = (fileName, contents) => {
    const previousVersion = fileVersions.get(fileName) ?? 0;
    const previousContents = fileContents.get(fileName);
    if (contents !== previousContents) {
        fileVersions.set(fileName, previousVersion + 1);
        fileContents.set(fileName, contents);
        incProjectVersion();
    }
};
export const addRootFile = (fileName) => {
    const rfn = rootFileNames();
    if (!rfn.has(fileName)) {
        rfn.add(fileName);
        incProjectVersion();
    }
};
//# sourceMappingURL=file-versions.js.map
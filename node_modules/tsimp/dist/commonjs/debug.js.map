{"version":3,"file":"debug.js","sourceRoot":"","sources":["../../src/debug.ts"],"names":[],"mappings":";;;AAAA,+BAA6B;AAE7B,MAAM,MAAM,GAAG,CAAC,CAAS,EAAE,EAAE,CAC3B,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAA;AACpD,MAAM,IAAI,GAAG,CAAC,CAAS,EAAE,EAAE,CACzB,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAA;AACpD,MAAM,GAAG,GAAG,CAAC,CAAS,EAAE,EAAE,CACxB,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAA;AACtD,MAAM,OAAO,GAAG,CAAC,CAAS,EAAE,EAAE,CAC5B,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAA;AACpD,MAAM,KAAK,GAAG,CAAC,CAAS,EAAE,EAAE,CAC1B,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAA;AAEtD,MAAM,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,IAAI,GAAG,EAAE,EAAE,CAAC,CAAA;AAE1D,MAAM,SAAS,GACb,CAAC,IAAY,EAAE,KAA4B,EAAE,EAAE,CAC/C,CAAC,GAAG,IAAW,EAAE,EAAE;IACjB,MAAM,MAAM,GAAG,SAAS,KAAK,CAAC,IAAI,CAAC,IAAI,OAAO,CAAC,GAAG,IAAI,CAAA;IACtD,MAAM,GAAG,GAAG,IAAA,aAAM,EAAC,GAAG,IAAI,CAAC,CAAC,IAAI,EAAE,CAAA;IAClC,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,MAAM,EAAE,CAAC,CAAC,CAAA;AAC7D,CAAC,CAAA;AAEU,QAAA,KAAK,GAAG,SAAS,CAAC,OAAO,EAAE,GAAG,CAAC,CAAA;AAC/B,QAAA,IAAI,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAE,CAAC,CAAA;AACvD,QAAA,KAAK,GAChB,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAE,CAAC,CAAA;AACvC,QAAA,IAAI,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAE,CAAC,CAAA;AACrD,QAAA,KAAK,GAAG,SAAS,CAAC,OAAO,EAAE,KAAK,CAAC,CAAA","sourcesContent":["import { format } from 'util'\n\nconst yellow = (s: string) =>\n  process.stderr.isTTY ? `\\x1b[43;30m${s}\\x1b[m` : s\nconst blue = (s: string) =>\n  process.stderr.isTTY ? `\\x1b[44;37m${s}\\x1b[m` : s\nconst red = (s: string) =>\n  process.stderr.isTTY ? `\\x1b[41;30;1m${s}\\x1b[m` : s\nconst magenta = (s: string) =>\n  process.stderr.isTTY ? `\\x1b[45;30m${s}\\x1b[m` : s\nconst green = (s: string) =>\n  process.stderr.isTTY ? `\\x1b[42;30;2m${s}\\x1b[m` : s\n\nconst level = parseInt(process.env.TSIMP_DEBUG || '0', 10)\n\nconst getLogger =\n  (name: string, color: (s: string) => string) =>\n  (...args: any[]) => {\n    const prefix = `TSIMP ${color(name)} ${process.pid}: `\n    const msg = format(...args).trim()\n    console.error(prefix + msg.split('\\n').join(`\\n${prefix}`))\n  }\n\nexport const error = getLogger('error', red)\nexport const warn = level > 0 ? getLogger('warn', yellow) : () => {}\nexport const debug =\n  level > 1 ? getLogger('debug', magenta) : () => {}\nexport const info = level > 2 ? getLogger('info', blue) : () => {}\nexport const trace = getLogger('trace', green)\n"]}
import { parse } from 'path';
export const jsExts = ['.js', '.mjs', '.cjs', '.jsx'];
export const tsExts = ['.ts', '.mts', '.cts', '.tsx'];
export const isTSExt = (e) => tsExts.includes(e);
export const isJSExt = (e) => jsExts.includes(e);
export const map = {
    '.js': ['.ts', '.tsx'],
    '.mjs': ['.mts'],
    '.cjs': ['.cts'],
    '.jsx': ['.tsx'],
    '.ts': ['.js'],
    '.mts': ['.mjs'],
    '.cts': ['.cjs'],
    '.tsx': ['.js', '.jsx'],
};
export const allExts = Object.keys(map);
export const isExt = (e) => allExts.includes(e);
export const equivalents = (path, extensionless = false) => {
    const { ext } = parse(path);
    const stem = path.substring(0, path.length - ext.length);
    const equivs = [];
    if (isExt(ext)) {
        equivs.push(...map[ext].map(e => stem + e));
    }
    if (extensionless) {
        equivs.push(...allExts.map(e => path + e));
    }
    return equivs;
};
//# sourceMappingURL=equivalents.js.map